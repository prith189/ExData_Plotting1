library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf
mydf<-read.csv(url=path2csv,stringsAsFactors=F)
mydf<-read.csv(path2csv,stringsAsFactors=F)
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageversion("dplyr")
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
cran(5:20)
cran[,5:20]
cran[5:20]
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version <="3.0.2",country=="IN")
filter(cran,country=="IN")
filter(cran,country=="US")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500,r_os=="linux_gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_Version))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran,ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
select(cran,ip_id,package,size)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_tb = size_mb / 2^10)
mutate(cran3, size_mb = size/2^20,size_gb = size_mb / 2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts<-filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique<-select(pack_sum,unique>465)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
exit()
0
gather(students, sex, count, -grade)
students2
gather(students2,sex_class,column_count,-gather)
gather(students2,sex_class,column_count,-grade)
gather(students2,sex_class,count,-grade)
res<-gather(students2,sex_class,count,-grade)
res
?seperate
?separate
separate(res,sex_class,c("sex","class"))
submit()
students3
submit()
?spread()
?spread
submit()
extract_numeric("class5")
submit()
?mutate
submit()
submit()
submit()
submit()
submit()
reset()
?extract_numeric
submit()
0
setwd("C:/Users/aparna/Desktop/Repository/EDA/ExData_Plotting1")
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url,"./Data.zip")
unzip("./Data.zip")
data<-read.table("./household_power_consumption.txt")
View(data)
data<-read.table("./household_power_consumption.txt",sep=";")
View(data)
data<-read.table("./household_power_consumption.txt",sep=";",header=T)
View(data)
?strptime
dates <- c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92")
times <- c("23:03:20", "22:29:56", "01:03:30", "18:21:03", "16:56:26")
x <- paste(dates, times)
strptime(x, "%m/%d/%y %H:%M:%S")
?as.date
??as.date
jes<-head(data)
View(jes)
jes$Date<-as.date(jes$Date)
jes$Date<-as.Date(jes$Date)
View(jes)
View(data)
rm(jes)
jes<-head(Data)
jes<-head(data)
jes$Date<-strptime(jes$Date,"%m/%d/%y")
jes$Date<-as.Date(jes$Date)
View(jes)
rm(jes)
jes<-head(data)
jes$Date<-as.Date(jes$Date)
jes$Date<-strptime(jes$Date,"%m/%d/%y")
View(jes)
rm(jes)
jes<-head(data)
jes$Date<-as.Date(jes$Date)
jes$Date<-strptime(jes$Date,"%m/%d/%y")
rm(jes)
jes<-head(data)
jes$Date<-strptime(jes$Date,"%m/%d/%y")
?strptime
rm(jes)
jes<-head(data)
jes$Date<-strptime(jes$Date,"%m/%d/%y")
rm(jes)
jes<-head(data)
jes$Date<-as.Date(jes$Date)
as.Date
?as.Date
rm(jes)
jes<-head(data)
jes$Date<-as.Date(jes$Date,"%d/%m/%y")
dates <- c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92")
as.Date(dates, "%m/%d/%y")
subset(data,data$Date=="16/12/2006")
